name: Docker Image CI

on:
  push:
    branches: '**'

jobs:
  build-antaeus:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag snazzybucket/antaeus:latest
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push the Docker image
      run: |
        docker push snazzybucket/antaeus:latest
  build-provider:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build ./provider --file ./provider/Dockerfile --tag snazzybucket/provider:latest
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push the Docker image
      run: |
        docker push snazzybucket/provider:latest
  build-testclient:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build ./testclient --file ./testclient/Dockerfile --tag snazzybucket/testclient:latest
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push the Docker image
      run: |
        docker push snazzybucket/testclient:latest
  test-k8s:
    needs: [build-antaeus, build-provider, build-testclient]
    runs-on: ubuntu-latest
    name: test yaml on microk8s
    steps:
    - uses: actions/checkout@v2
    - uses: balchua/microk8s-actions@v0.2.1
      with:
        channel: '1.19/stable'
        addons: '["dns", "ingress"]'
    - name: Test MicroK8s
      id: myactions
      run: |
        kubectl get no
        kubectl get pods -A -o wide
        kubectl apply -f ./deploy/antaeus.yaml
        kubectl apply -f ./deploy/provider.yaml
        kubectl run testclient --env="MAX_RETRIES=30" --env="API_URL=http://antaeus" --restart=Never --rm -i --image snazzybucket/testclient:latest
  test-k8s-dhall:
    needs: [build-antaeus, build-provider, build-testclient]
    runs-on: ubuntu-latest
    name: test dhall on microk8s
    steps:
    - uses: actions/checkout@v2
    - uses: balchua/microk8s-actions@v0.2.1
      with:
        channel: '1.19/stable'
        addons: '["dns", "ingress"]'
    - name: Test MicroK8s
      id: myactions
      run: |
        kubectl get no
        kubectl get pods -A -o wide
        make render-k8s-yaml-docker > output.yaml
        kubectl apply -f output.yaml
        kubectl run testclient --env="MAX_RETRIES=30" --env="API_URL=http://antaeus" --restart=Never --rm -i --image snazzybucket/testclient:latest
  test-k8s-dhall-ingress:
    needs: [build-antaeus, build-provider, build-testclient]
    runs-on: ubuntu-latest
    name: test dhall and ingress on microk8s
    steps:
    - uses: actions/checkout@v2
    - uses: balchua/microk8s-actions@v0.2.1
      with:
        channel: '1.19/stable'
        addons: '["dns", "ingress"]'
    - name: Test MicroK8s
      id: myactions
      run: |
        kubectl get no
        kubectl get pods -A -o wide
        make render-k8s-yaml-docker > output.yaml
        kubectl apply -f output.yaml
        docker run -e="API_URL=http://172.17.0.1:80" --rm snazzybucket/testclient:latest
